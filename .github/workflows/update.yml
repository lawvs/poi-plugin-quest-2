name: Update quest data

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * *' # At every day 00:00(UTC).
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        node-version: [18.x]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 'latest'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install node modules
        uses: bahmutov/npm-install@v1

      - name: Build
        run: npm run build

      - name: Lint
        run: npm run lint -- --max-warnings=0

      - name: Update
        run: npm test -- --updateSnapshot

      - name: Push Branch
        id: push
        run: |
          git add .
          # Do not proceed if there are no file differences
          COMMIT=$(git rev-parse --verify origin/$TARGET_BRANCH || echo HEAD)
          FILES_CHANGED=$(git diff-index --name-only --cached $COMMIT | wc -l)
          if [[ "$FILES_CHANGED" = "0" ]]; then
            echo "No file changes detected."
            echo "::set-output name=skipPR::true"
            exit 0
          fi
          echo -e "---\n'poi-plugin-quest-info-2': patch\n---\n\nUpdate quest data\n" > .changeset/bot-data-update.md
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git commit --message $COMMIT_MESSAGE
          git remote set-url origin "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY"
          git push --force origin HEAD:$TARGET_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          COMMIT_MESSAGE: 'chore: update quest data'
          TARGET_BRANCH: 'bot/data'

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      # see https://github.com/repo-sync/pull-request
      - name: Create Pull Request
        if: steps.push.outputs.skipPR != 'true'
        uses: repo-sync/pull-request@v2
        with:
          source_branch: 'bot/data' # If blank, default: triggered branch
          pr_title: Update quest data (${{ steps.date.outputs.date }}) # Title of pull request
          pr_body: '' # Full markdown support, requires pr_title to be set
          github_token: ${{ secrets.GITHUB_TOKEN }}
